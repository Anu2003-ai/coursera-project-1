import React from "react";
import ReactDOM from "react-dom/client";
import { Provider } from "react-redux";
import store from "./store";
import App from "./App";

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(
  <Provider store={store}>
    <App />
  </Provider>
);
2. store.js
js
Copy
Edit
import { createStore } from "redux";
import cartReducer from "./reducers/cartReducer";

const store = createStore(
  cartReducer,
  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()
);

export default store;
3. reducers/cartReducer.js
js
Copy
Edit
const initialState = {
  cart: {},
};

function cartReducer(state = initialState, action) {
  switch (action.type) {
    case "ADD_TO_CART": {
      const plant = action.payload;
      if (state.cart[plant.id]) return state; // disable after add
      return {
        ...state,
        cart: {
          ...state.cart,
          [plant.id]: { ...plant, quantity: 1 },
        },
      };
    }
    case "INCREASE_QUANTITY": {
      const id = action.payload;
      return {
        ...state,
        cart: {
          ...state.cart,
          [id]: {
            ...state.cart[id],
            quantity: state.cart[id].quantity + 1,
          },
        },
      };
    }
    case "DECREASE_QUANTITY": {
      const id = action.payload;
      const currentQty = state.cart[id].quantity;
      if (currentQty <= 1) return state;
      return {
        ...state,
        cart: {
          ...state.cart,
          [id]: {
            ...state.cart[id],
            quantity: currentQty - 1,
          },
        },
      };
    }
    case "DELETE_FROM_CART": {
      const id = action.payload;
      const newCart = { ...state.cart };
      delete newCart[id];
      return {
        ...state,
        cart: newCart,
      };
    }
    default:
      return state;
  }
}

export default cartReducer;
4. actions/cartActions.js
js
Copy
Edit
export const addToCart = (plant) => ({
  type: "ADD_TO_CART",
  payload: plant,
});

export const increaseQuantity = (id) => ({
  type: "INCREASE_QUANTITY",
  payload: id,
});

export const decreaseQuantity = (id) => ({
  type: "DECREASE_QUANTITY",
  payload: id,
});

export const deleteFromCart = (id) => ({
  type: "DELETE_FROM_CART",
  payload: id,
});
5. App.js
jsx
Copy
Edit
import React, { useState } from "react";
import Header from "./components/Header";
import LandingPage from "./components/LandingPage";
import ProductListing from "./components/ProductListing";
import ShoppingCart from "./components/ShoppingCart";

function App() {
  const [page, setPage] = useState("landing");

  const navigate = (p) => setPage(p);

  return (
    <>
      {(page === "product" || page === "cart") && (
        <Header navigate={navigate} />
      )}
      {page === "landing" && <LandingPage navigate={navigate} />}
      {page === "product" && <ProductListing />}
      {page === "cart" && <ShoppingCart navigate={navigate} />}
    </>
  );
}

export default App;
6. components/Header.js
jsx
Copy
Edit
import React from "react";
import { useSelector } from "react-redux";

export default function Header({ navigate }) {
  const cart = useSelector((state) => state.cart);
  const totalItems = Object.values(cart).reduce(
    (acc, item) => acc + item.quantity,
    0
  );

  return (
    <header style={{ padding: "10px", borderBottom: "1px solid #ccc" }}>
      <button onClick={() => navigate("product")}>Products</button>
      <button onClick={() => navigate("cart")}>
        Cart ðŸ›’ ({totalItems})
      </button>
    </header>
  );
}
7. components/LandingPage.js
jsx
Copy
Edit
import React from "react";

export default function LandingPage({ navigate }) {
  return (
    <div
      style={{
        height: "100vh",
        backgroundImage:
          "url('https://images.unsplash.com/photo-1501004318641-b39e6451bec6?auto=format&fit=crop&w=1470&q=80')",
        backgroundSize: "cover",
        color: "white",
        textAlign: "center",
        paddingTop: "150px",
      }}
    >
      <h1>Plantify</h1>
      <p>Your one-stop shop for beautiful houseplants.</p>
      <button
        style={{ padding: "10px 20px", fontSize: "16px", cursor: "pointer" }}
        onClick={() => navigate("product")}
      >
        Get Started
      </button>
    </div>
  );
}
8. components/ProductListing.js
jsx
Copy
Edit
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import { addToCart } from "../actions/cartActions";

const plants = [
  {
    id: "1",
    name: "Snake Plant",
    price: 15,
    category: "Air Purifier",
    thumbnail:
      "https://cdn.pixabay.com/photo/2017/03/20/21/40/sansevieria-2159603_1280.jpg",
  },
  {
    id: "2",
    name: "Spider Plant",
    price: 12,
    category: "Air Purifier",
    thumbnail:
      "https://cdn.pixabay.com/photo/2016/08/11/23/29/spider-plant-1587400_1280.jpg",
  },
  {
    id: "3",
    name: "Aloe Vera",
    price: 10,
    category: "Medicinal",
    thumbnail:
      "https://cdn.pixabay.com/photo/2017/01/20/00/30/aloe-vera-1994953_1280.jpg",
  },
  {
    id: "4",
    name: "Jade Plant",
    price: 20,
    category: "Succulent",
    thumbnail:
      "https://cdn.pixabay.com/photo/2017/06/20/14/46/jade-plant-2427271_1280.jpg",
  },
  {
    id: "5",
    name: "Peace Lily",
    price: 18,
    category: "Flowering",
    thumbnail:
      "https://cdn.pixabay.com/photo/2017/07/01/17/25/peace-lily-2469327_1280.jpg",
  },
  {
    id: "6",
    name: "Cactus",
    price: 14,
    category: "Succulent",
    thumbnail:
      "https://cdn.pixabay.com/photo/2016/05/26/20/23/cactus-1414148_1280.jpg",
  },
];

export default function ProductListing() {
  const dispatch = useDispatch();
  const cart = useSelector((state) => state.cart);

  // Group by category
  const categories = [...new Set(plants.map((p) => p.category))];

  return (
    <div style={{ padding: "20px" }}>
      {categories.map((cat) => (
        <div key={cat}>
          <h2>{cat}</h2>
          <div style={{ display: "flex", gap: "20px", flexWrap: "wrap" }}>
            {plants
              .filter((p) => p.category === cat)
              .map((plant) => (
                <div
                  key={plant.id}
                  style={{
                    border: "1px solid #ccc",
                    padding: "10px",
                    width: "150px",
                  }}
                >
                  <img
                    src={plant.thumbnail}
                    alt={plant.name}
                    style={{ width: "100%", height: "100px", objectFit: "cover" }}
                  />
                  <h4>{plant.name}</h4>
                  <p>${plant.price}</p>
                  <button
                    disabled={!!cart[plant.id]}
                    onClick={() => dispatch(addToCart(plant))}
                  >
                    {cart[plant.id] ? "Added" : "Add to Cart"}
                  </button>
                </div>
              ))}
          </div>
        </div>
      ))}
    </div>
  );
}
9. components/ShoppingCart.js
jsx
Copy
Edit
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  increaseQuantity,
  decreaseQuantity,
  deleteFromCart,
} from "../actions/cartActions";

export default function ShoppingCart({ navigate }) {
  const dispatch = useDispatch();
  const cart = useSelector((state) => state.cart);
  const plants = Object.values(cart);

  const totalItems = plants.reduce((acc, item) => acc + item.quantity, 0);
  const totalCost = plants.reduce((acc, item) => acc + item.price * item.quantity, 0);

  if (plants.length === 0) {
    return (
      <div style={{ padding: "20px" }}>
        <h2>Your cart is empty</h2>
        <button onClick={() => navigate("product")}>Continue Shopping</button>
      </div>
    );
  }

  return (
    <div style={{ padding: "20px" }}>
      <h2>Shopping Cart</h2>
      <p>Total plants: {totalItems}</p>
      <p>Total cost: ${totalCost.toFixed(2)}</p>
      {plants.map((plant) => (
        <div
          key={plant.id}
          style={{
            display: "flex",
            alignItems: "center",
            gap: "15px",
            borderBottom: "1px solid #ccc",
            padding: "10px 0",
          }}
        >
          <img
            src={plant.thumbnail}
            alt={plant.name}
            style={{ width: "80px", height: "80px", objectFit: "cover" }}
          />
          <div style={{ flexGrow: 1 }}>
            <h4>{plant.name}</h4>
            <p>${plant.price}</p>
          </div>
          <div>
            <button onClick={() => dispatch(increaseQuantity(plant.id))}>+</button>
            <span style={{ margin: "0 10px" }}>{plant.quantity}</span>
            <button onClick={() => dispatch(decreaseQuantity(plant.id))}>-</button>
          </div>
          <button onClick={() => dispatch(deleteFromCart(plant.id))}>Delete</button>
        </div>
      ))}

      <button
        onClick={() => alert("Coming Soon")}
        style={{ marginTop: "20px", padding: "10px 15px" }}
      >
        Checkout
      </button>
      <button
        onClick={() => navigate("product")}
        style={{ marginTop: "10px", padding: "10px 15px" }}
      >
        Continue Shopping
      </button>
    </div>
  );
}
